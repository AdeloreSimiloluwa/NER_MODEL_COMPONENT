name: Train spacy
inputs:
- {name: TRAIN_DATA}
- {name: OUTPUT_PATH, default: /content/custom_ner_model, optional: true}
- {name: iterations, default: '2', optional: true}
implementation:
  container:
    image: python:3.7
    command:
    - sh
    - -c
    - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
      'spacy==2.0.18' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet
      --no-warn-script-location 'spacy==2.0.18' --user) && "$0" "$@"
    - python3
    - -u
    - -c
    - |
      def train_spacy(TRAIN_DATA, OUTPUT_PATH = '/content/custom_ner_model', iterations = 2) :

          #Converting JSON1 file to Spacy tuples format
          import json
          import numpy as np
          import plac
          import random
          import warnings
          from pathlib import Path
          import spacy
          import logging
          from spacy.util import minibatch, compounding
          from spacy.gold import GoldParse
          from spacy.scorer import Scorer

          TRAIN_DATA = TRAIN_DATA

      import argparse
      _parser = argparse.ArgumentParser(prog='Train spacy', description='')
      _parser.add_argument("--TRAIN-DATA", dest="TRAIN_DATA", type=str, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--OUTPUT-PATH", dest="OUTPUT_PATH", type=str, required=False, default=argparse.SUPPRESS)
      _parser.add_argument("--iterations", dest="iterations", type=str, required=False, default=argparse.SUPPRESS)
      _parsed_args = vars(_parser.parse_args())

      _outputs = train_spacy(**_parsed_args)
    args:
    - --TRAIN-DATA
    - {inputValue: TRAIN_DATA}
    - if:
        cond: {isPresent: OUTPUT_PATH}
        then:
        - --OUTPUT-PATH
        - {inputValue: OUTPUT_PATH}
    - if:
        cond: {isPresent: iterations}
        then:
        - --iterations
        - {inputValue: iterations}
